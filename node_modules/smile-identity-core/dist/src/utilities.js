"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Utilities = exports.get_job_status = void 0;
const axios_1 = __importDefault(require("axios"));
const signature_1 = __importDefault(require("./signature"));
const helpers_1 = require("./helpers");
const get_job_status = (partnerId, apiKey, url, userId, jobId, { return_history, return_images }) => axios_1.default
    .post(`https://${url}/job_status`, {
    user_id: userId,
    job_id: jobId,
    partner_id: partnerId,
    history: return_history,
    image_links: return_images,
    ...new signature_1.default(partnerId, apiKey).generate_signature(),
})
    .then(({ data }) => {
    const valid = new signature_1.default(partnerId, apiKey).confirm_signature(data.timestamp, data.signature);
    if (!valid) {
        throw new Error('Unable to confirm validity of the job_status response');
    }
    return data;
});
exports.get_job_status = get_job_status;
class Utilities {
    constructor(partner_id, api_key, sid_server) {
        this.partnerId = partner_id;
        this.apiKey = api_key;
        this.url = (0, helpers_1.mapServerUri)(sid_server);
    }
    get_job_status(userId, jobId, options = { return_history: false, return_images: false }) {
        return (0, exports.get_job_status)(this.partnerId, this.apiKey, this.url, userId, jobId, options);
    }
}
exports.Utilities = Utilities;
//# sourceMappingURL=utilities.js.map